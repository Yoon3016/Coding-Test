문제
수직선 위에 N개의 좌표 X1, X2, ..., XN이 있다. 이 좌표에 좌표 압축을 적용하려고 한다.

Xi를 좌표 압축한 결과 X'i의 값은 Xi > Xj를 만족하는 서로 다른 좌표의 개수와 같아야 한다.

X1, X2, ..., XN에 좌표 압축을 적용한 결과 X'1, X'2, ..., X'N를 출력해보자.

입력
첫째 줄에 N이 주어진다.

둘째 줄에는 공백 한 칸으로 구분된 X1, X2, ..., XN이 주어진다.

출력
첫째 줄에 X'1, X'2, ..., X'N을 공백 한 칸으로 구분해서 출력한다.

제한
1 ≤ N ≤ 1,000,000
-109 ≤ Xi ≤ 109
예제 입력 1 
5
2 4 -10 4 -9
예제 출력 1 
2 3 0 3 1
예제 입력 2 
6
1000 999 1000 999 1000 999
예제 출력 2 
1 0 1 0 1 0
--------------------

#include <stdio.h>
#include <stdlib.h>
int compare_num(const void* first, const void* second);
int compare_index(const void* first, const void* second);

struct Array
{
	int num;
	int index;
	int count;
};

int main()
{
	int n;
	Array *arr;
	scanf("%d", &n);
	
	arr = (Array*)malloc(n * sizeof(Array));
	for(int i=0;i<n;i++)
	{ 
		scanf("%d", &arr[i].num);
		arr[i].index = i;
	}

	qsort(arr, n, sizeof(arr[0]), compare_num);
	int t_count = 0;
	arr[0].count = 0;
	for (int i = 1; i < n; i++)
	{
		if (arr[i].num == arr[i - 1].num)
		{
			arr[i].count = t_count;
		}
		else
		{
			t_count++;
			arr[i].count = t_count;
		}
	}
	qsort(arr, n, sizeof(arr[0]), compare_index);
	for (int i = 0; i < n; i++)
	{
		printf("%d ", arr[i].count);
	}
	free(arr);

	return 0;
}

int compare_num(const void* first, const void* second)
{
	Array* a = (Array*)first;
	Array* b = (Array*)second;
	if (a->num < b->num)
		return -1;
	else 
		return 1;
}
int compare_index(const void* first, const void* second)
{
	Array* a = (Array*)first;
	Array* b = (Array*)second;
	if (a->index < b->index)
		return -1;
	else
		return 1;
}